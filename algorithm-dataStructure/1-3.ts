/* 有一个小球掉落在一串连续的弹簧板上，小球落到某一个弹簧板后，会被弹到某一个地点，直到小球被弹到弹簧板以外的地方。

假设有 𝑛
 个连续的弹簧板，每个弹簧板占一个单位距离，𝑎[𝑖]
 代表代表第 𝑖
 个弹簧板会把小球向前弹 𝑎[𝑖]
 个距离。比如位置 1
 的弹簧能让小球前进 2
 个距离到达位置 3
 。如果小球落到某个弹簧板后，经过一系列弹跳会被弹出弹簧板，那么小球就能从这个弹簧板弹出来。

现在小球掉到了1
 号弹簧板上面，那么这个小球会被弹起多少次，才会弹出弹簧板。 1
号弹簧板也算一次。 */

// 输入
// 第一行输入一个 𝑛 代表一共有 𝑛(1≤𝑛≤100000)个弹簧板。
// 第二行输入 𝑛个数字，中间用空格分开。第 𝑖 个数字 𝑎[𝑖](0<𝑎[𝑖]≤30)代表第 𝑖个弹簧板可以让小球移动的距离。

// 输出
// 输出一个整数，表示小球被弹起的次数。

// 样例输入:
/* 
5
2 2 3 1 2 
*/
// 样例输出:2

// 样例输入:
/* 
5
1 2 3 1 2 
*/
// 样例输出:4

function fn<T>(n: number = 0, arr: number[] = []): number {
  return f(0, n, arr)
}

function f(i: number, n: number, arr: number[]): number {
  if (i >= n) return 0
  return f(i + arr[i], n, arr) + 1
}
